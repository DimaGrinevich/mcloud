upstream stf_app {
    server stf-app:3000 max_fails=0;
}

upstream stf_auth {
    server stf-auth-mock:3000 max_fails=0;
}

#upstream stf_auth {
#    server stf-auth-ldap:3000 max_fails=0;
#}

upstream stf_storage_apk {
    server stf-storage-plugin-apk:3000 max_fails=0;
}

upstream stf_storage_image {
    server stf-storage-plugin-image:3000 max_fails=0;
}

upstream stf_storage_temp {
    server stf-storage-temp:3000 max_fails=0;
}

upstream stf_websocket {
    server stf-websocket:3000 max_fails=0;
}

upstream stf_api {
    server stf-api:3000 max_fails=0;
}

  types {
    application/javascript  js;
    image/gif               gif;
    image/jpeg              jpg;
    text/css                css;
    text/html               html;
  }

  map $http_upgrade $connection_upgrade {
    default  upgrade;
    ''       close;
  }

server {
    listen       80;
    server_name  PUBLIC_IP;

    #to resolve issue with uploading to sonar huge project reports (Error 413)
    client_max_body_size 200M;

    # SSL configuration
#    listen 443 ssl;
#    ssl_certificate /etc/nginx/ssl/ssl.crt;
#    ssl_certificate_key /etc/nginx/ssl/ssl.key;
#    ssl_session_timeout 5m;
#    ssl_session_cache shared:SSL:10m;
##    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
#    ssl_prefer_server_ciphers on;

    resolver 8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    #charset koi8-r;
    access_log  /var/log/nginx/default.access.log main;
    error_log   /var/log/nginx/default.error.log warn;


#Declare for each dedicated host with provider their own stf-provider handler using private ip and rules below
    # Handle stf-provider@PUBLIC_IP server
    location ~ "^/d/PRIVATE_IP/([^/]+)/(?<port>[0-9]+)/$" {
      proxy_pass http://PRIVATE_IP:$port/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Real-IP $remote_addr;
    }

    location /auth/ {
      proxy_pass http://stf_auth/auth/;
    }

    location /api/ {
      proxy_pass http://stf_api/api/;
    }

    location /s/image/ {
      proxy_pass http://stf_storage_image;
    }

    location /s/apk/ {
      proxy_pass http://stf_storage_apk;
    }

    location /s/ {
      client_max_body_size 1024m;
      client_body_buffer_size 128k;
      proxy_pass http://stf_storage_temp;
    }

    location /socket.io/ {
      proxy_pass http://stf_websocket;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $http_x_real_ip;
    }

    location / {
      proxy_pass http://stf_app;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $http_x_real_ip;

    }

#    location / {
#        root   /usr/share/nginx/html;
#        index  index.html index.htm;
#    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

